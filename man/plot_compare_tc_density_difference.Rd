% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualisation_analysis.R
\name{plot_compare_tc_density_difference}
\alias{plot_compare_tc_density_difference}
\title{Compare transcriptomic complexity density differences between groups}
\usage{
plot_compare_tc_density_difference(
  tc_results_list,
  group_names = NULL,
  pair_indices = NULL,
  x_metric = "inter_cellular_isoform_diversity",
  y_metric = "inter_cell_type_specificity",
  grid_size = 100,
  main_title = "Density Differences Between Groups"
)
}
\arguments{
\item{tc_results_list}{List of transcriptomic complexity results objects}

\item{group_names}{Vector of names for each group (if NULL, generic names are used)}

\item{pair_indices}{List of integer pairs for which groups to compare (if NULL, consecutive pairs are used)}

\item{x_metric}{Name of metric for x-axis (default: "inter_cellular_isoform_diversity")}

\item{y_metric}{Name of metric for y-axis (default: "inter_cell_type_specificity")}

\item{grid_size}{Size of the density estimation grid (higher = more detailed but slower)}

\item{main_title}{Main title for the combined plot}
}
\value{
A ggplot object (single comparison) or patchwork combined plot (multiple comparisons)
}
\description{
This function calculates and visualises the density differences of genes
in a 2D metric space between different groups or conditions. It helps identify
regions where gene distributions shift between groups.
}
\examples{
\dontrun{
# This example requires multiple conditions/datasets
# Here we demonstrate with subsampled data to simulate conditions
data(gene_counts_blood)
data(transcript_counts_blood)
data(transcript_info)
data(sample2stage)

# Create SCHT for full dataset
scht_full <- create_scht(
  gene_counts = gene_counts_blood,
  transcript_counts = transcript_counts_blood,
  transcript_info = transcript_info,
  cell_info = sample2stage,
  qc_params = list(
    min_genes_per_cell = 4000,       
    max_genes_per_cell = 10000,      
    min_cells_expressing = 0.02,   
    min_expr = 1e-6
  ),
  n_hvg = 3000,
  verbose = FALSE
)

# Calculate metrics for demonstration
tc_results_full <- calculate_isoform_complexity_metrics(scht_full, verbose = FALSE)

# For demonstration, use the same results as different "conditions"
tc_results_list <- list(
  baseline = tc_results_full,
  treatment = tc_results_full  # In practice, these would be different
)
                        
# Compare the conditions
plot_compare_tc_density_difference(
  tc_results_list, 
  group_names = c("Baseline", "Treatment")
)
}

}
