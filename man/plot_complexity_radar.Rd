% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualisation_analysis.R
\name{plot_complexity_radar}
\alias{plot_complexity_radar}
\title{Create gene complexity radar chart}
\usage{
plot_complexity_radar(tc_metrics, genes, scale_type = "global")
}
\arguments{
\item{tc_metrics}{Data frame from calculate_isoform_complexity_metrics() or the results object}

\item{genes}{Vector of gene names to include}

\item{scale_type}{How to scale metrics: "global" (across all genes), "per_metric" (each metric independently), or "none"}
}
\value{
A ggplot object that can be printed or saved
}
\description{
Creates a radar chart showing multiple complexity metrics for selected genes.
This visualisation provides a compact way to compare different genes across
multiple complexity dimensions simultaneously.
}
\examples{
# Load example data and create SCHT
data(gene_counts_blood)
data(transcript_counts_blood)
data(transcript_info)
data(sample2stage)

scht_obj <- create_scht(
  gene_counts = gene_counts_blood,
  transcript_counts = transcript_counts_blood,
  transcript_info = transcript_info,
  cell_info = sample2stage,
  qc_params = list(
    min_genes_per_cell = 4000,       
    max_genes_per_cell = 10000,      
    min_cells_expressing = 0.02,   
    min_expr = 1e-6
  ),
  n_hvg = 3000,
  verbose = FALSE
)

# Calculate complexity metrics
tc_results <- calculate_isoform_complexity_metrics(scht_obj, verbose = FALSE)

# Create radar plot for specific genes
# Use genes from the middle of the results
available_genes <- rownames(tc_results$metrics)
genes_to_plot <- available_genes[c(100, 200, 300, 400, 500)]

# Note: This example requires the 'ggradar' package
if(requireNamespace("ggradar", quietly = TRUE)) {
  plot_complexity_radar(tc_results, genes_to_plot)
}

}
