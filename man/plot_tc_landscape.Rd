% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/visualisation_analysis.R
\name{plot_tc_landscape}
\alias{plot_tc_landscape}
\title{Transcriptomic complexity landscape plot with marginal distributions}
\usage{
plot_tc_landscape(
  tc_results,
  x_metric = "inter_cellular_isoform_diversity",
  y_metric = "inter_cell_type_specificity",
  highlight_genes = NULL,
  label_annotation = "intra_cell_type_heterogeneity",
  label_top = 10,
  use_thresholds = TRUE,
  x_threshold = 0.6,
  y_threshold = 0.6,
  point_transparency = 0.85
)
}
\arguments{
\item{tc_results}{Transcriptomic complexity results object or metrics data frame}

\item{x_metric}{Name of metric for x-axis (default: "inter_cellular_isoform_diversity")}

\item{y_metric}{Name of metric for y-axis (default: "inter_cell_type_specificity")}

\item{highlight_genes}{Optional vector of gene names to highlight}

\item{label_annotation}{Column name to use for highlighting/labelling genes}

\item{label_top}{Number of top genes to label if highlight_genes not provided}

\item{use_thresholds}{Whether to use thresholds from tc_results}

\item{x_threshold}{Manual threshold value for x-axis}

\item{y_threshold}{Manual threshold value for y-axis}

\item{point_transparency}{Alpha value for points (0-1)}
}
\value{
A ggplot object with marginal distributions that can be printed or saved
}
\description{
Creates a visualisation of transcriptomic complexity landscape with quadrants
and marginal distributions. This plot reveals the distribution of genes across
different complexity dimensions and helps identify genes with interesting patterns.
}
\examples{
\dontrun{
# Assuming you have calculated transcriptomic complexity
tc_results <- calculate_isoform_complexity_metrics(scht_obj)

# Create landscape plot with default metrics
plot_tc_landscape(tc_results)

# Use different metrics and highlight specific genes
plot_tc_landscape(tc_results, 
                 x_metric = "intra_cellular_isoform_diversity", 
                 y_metric = "inter_cellular_isoform_diversity",
                 highlight_genes = c("GENE1", "GENE2", "GENE3"))
}

}
